---
import type { WidgetSteps1Props as Props } from './types';
import WidgetWrapper from '../WidgetWrapper/WidgetWrapper.astro';
import Headline from '../Headline/Headline.astro';
import Button from '../Button/Button.astro';
import { Icon } from 'astro-icon/components';
import { cn } from '../../utils';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  callToAction = await Astro.slots.render('callToAction'),
  items = [],
  isReversed = false,
  isAfterContent = false,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`${isAfterContent ? 'pt-0 md:pt-0 lg:pt-0' : ''}  ${classes?.container ?? ''}`}
  bg={bg}
>
  <div class={`flex flex-col gap-8 md:gap-12 md:flex-row ${isReversed ? 'md:flex-row-reverse' : ''}`}>
    <div class={`w-full lg:w-1/2 gap-8 md:gap-12 ${isReversed ? 'lg:ml-16 md:ml-8 ml-0' : 'lg:mr-16 md:mr-8 mr-0'}`}>
      <Headline
        title={title}
        subtitle={subtitle}
        tagline={tagline}
        classes={{
          container: 'text-left rtl:text-right',
          title: 'text-3xl lg:text-4xl',
          ...((classes?.headline as object) ?? {}),
        }}
      />

      <div class="w-full text-center md:text-left rtl:md:text-right">
        {
          typeof callToAction === 'string' ? (
            <Fragment set:html={callToAction} />
          ) : (
            callToAction && callToAction.text && callToAction.href && <Button {...callToAction} class="mb-12 w-auto" />
          )
        }
      </div>
    </div>
    <div class="w-full lg:w-1/2 px-0">
      <ul class="space-y-10">
        {
          items && items.length
            ? items.map(({ title, description, icon, href }, index) => (
                <li class="flex md:-mx-4">
                  <div class="pr-4 sm:pl-4 rtl:pr-0 rtl:pl-4 rtl:sm:pl-0 rtl:sm:pr-4">
                    <span
                      class={cn(
                        'flex w-16 h-16 mx-auto items-center justify-center text-2xl font-bold rounded-full',
                        classes?.itemIcon || 'bg-card text-card-foreground'
                      )}
                    >
                      {icon ? <Icon name={icon} class="w-6 h-6 icon-bold" /> : index + 1}
                    </span>
                  </div>
                  <div class="pl-4 rtl:pl-0 rtl:pr-4">
                    <h3
                      class={cn('mb-3 text-xl font-semibold font-heading', classes?.itemTitle || '')}
                      set:html={title}
                    />
                    {href ? (
                      <a
                        href={href}
                        class={cn('hover:underline', classes?.itemDescription || '')}
                        set:html={description}
                      />
                    ) : (
                      <p class={classes?.itemDescription || ''} set:html={description} />
                    )}
                  </div>
                </li>
              ))
            : ''
        }
      </ul>
    </div>
  </div>
</WidgetWrapper>
