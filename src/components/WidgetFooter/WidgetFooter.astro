---
import type { WidgetFooterProps as Props } from './types';
import { Icon } from 'astro-icon/components';
import { SITE } from 'vendor:config';
import WidgetWrapper from '../WidgetWrapper/WidgetWrapper.astro';
import { cn } from '../../utils';

const {
  socialLinks = [],
  secondaryLinks = [],
  links = [],
  note = '',
  classes = {},
  as = 'footer',
  isDark = false,
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  isDark={isDark}
  bg={bg}
  as={as}
  containerClass={cn('py-0 md:py-0 lg:py-0 border-t border-input not-prose', classes?.container)}
>
  <div class:list={[{ dark: isDark }, 'relative ']}>
    <div class="grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      <div class="col-span-12 lg:col-span-4">
        <div class="mb-2">
          <!-- SLOT: logo -->
          <slot name="logo">
            <a class="inline-block font-medium text-xl" href="/">{SITE?.name || 'Logo'}</a>
          </slot>
        </div>
        <div class="text-sm text-muted-foreground flex gap-1">
          {
            secondaryLinks.map(({ text, href }, index) => (
              <>
                {index !== 0 ? ' Â· ' : ''}
                <a
                  class="hover:text-foreground hover:underline transition duration-150 ease-in-out"
                  href={href}
                  set:html={text}
                />
              </>
            ))
          }
        </div>

        <!-- SLOT: subscribe form -->
        <slot name="subscribe" />
      </div>
      {
        links.map(({ title, links }) => (
          <div class="col-span-6 md:col-span-3 lg:col-span-2">
            <div class="text-foreground font-medium mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="text-sm">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="mb-2">
                    <a
                      class="text-muted-foreground hover:text-foreground hover:underline transition duration-150 ease-in-out"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      }
    </div>
    <div class="md:flex md:items-center md:justify-between py-6 md:py-8">
      {
        socialLinks?.length ? (
          <ul class="flex mb-4 md:order-1 -ml-2 md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4">
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a
                  class="text-zinc-600 dark:text-zinc-400 hover:bg-black/5 dark:hover:bg-white/5 focus:outline-hidden focus:ring-4 focus:ring-zinc-200 dark:focus:ring-zinc-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                  aria-label={ariaLabel}
                  href={href}
                >
                  {icon && <Icon name={icon} class="w-5 h-5" />}
                  <Fragment set:html={text} />
                </a>
              </li>
            ))}
          </ul>
        ) : (
          ''
        )
      }

      <div class="text-sm mr-4 text-gray-500">
        <Fragment set:html={note} />
      </div>
    </div>
  </div>
</WidgetWrapper>
