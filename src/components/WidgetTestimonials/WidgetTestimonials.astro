---
import type { WidgetTestimonialsProps as Props } from './types';
import WidgetWrapper from '../WidgetWrapper/WidgetWrapper.astro';
import ItemGrid0 from '../ItemGrid0/ItemGrid0.astro';
import Headline from '../Headline/Headline.astro';
import Button from '../Button/Button.astro';
import Card5 from '../Card5/Card5.astro';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline = await Astro.slots.render('tagline'),
  items = [],
  callToAction,
  columns = 3,
  isAfterContent = false,
  position = 'center',
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`max-w-6xl mx-auto ${isAfterContent ? 'pt-0 md:pt-0 lg:pt-0' : ''} ${classes?.container ?? ''}`}
  bg={bg}
>
  <Headline title={title} subtitle={subtitle} tagline={tagline} position={position} />

  <ItemGrid0 columns={columns}>
    {
      items &&
        items.map((item) => (
          <Card5
            {...item}
            classes={{
              container: 'p-6 gap-0 shadow-xl dark:shadow-none border-0 bg-card text-card-foreground',
              ...((classes?.items as object) ?? {}),
            }}
          />
        ))
    }
  </ItemGrid0>

  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
