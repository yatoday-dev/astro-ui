---
import type {Card0Props as Props} from './types';
import {twMerge} from 'tailwind-merge';

const {
  badge,
  badgeTopRight,
  badgeBottomRight,
  badgeBottomLeft,
  as = 'article',
  classes = {}
} = Astro.props;

const WrapperTag = as;

const {
  container: containerClass = '',
  badge: badgeClass = 'top-2 left-2',
  badgeTopRight: badgeTopRightClass = 'top-2 right-2',
  badgeBottomRight: badgeBottomRightClass = 'bottom-2 right-2',
  badgeBottomLeft: badgeBottomLeftClass = 'bottom-2 left-2',
} = classes;
---

<WrapperTag
  class={twMerge(
    'relative flex flex-col justify-between gap-6 overflow-hidden rounded-lg border border-input bg-card text-card-foreground py-6 group',
    containerClass
  )}
>
  <!-- Default badge -->
  {(Astro.slots.has('badge') || badge) && (
    <div class={twMerge('absolute z-10', badgeClass)}>
      <slot name="badge">
        {badge && <span set:html={badge}/>}
      </slot>
    </div>
  )}

  {(Astro.slots.has('badgeTopRight') || badgeTopRight) && (
    <div class={twMerge('absolute z-10', badgeTopRightClass)}>
      <slot name="badgeTopRight">
        {badgeTopRight && <span set:html={badgeTopRight}/>}
      </slot>
    </div>
  )}

  {(Astro.slots.has('badgeBottomRight') || badgeBottomRight) && (
    <div class={twMerge('absolute z-10', badgeBottomRightClass)}>
      <slot name="badgeBottomRight">
        {badgeBottomRight && <span set:html={badgeBottomRight}/>}
      </slot>
    </div>
  )}

  {(Astro.slots.has('badgeBottomLeft') || badgeBottomLeft) && (
    <div class={twMerge('absolute z-10', badgeBottomLeftClass)}>
      <slot name="badgeBottomLeft">
        {badgeBottomLeft && <span set:html={badgeBottomLeft}/>}
      </slot>
    </div>
  )}


  <slot name="image"/>

  <slot/>
</WrapperTag>
